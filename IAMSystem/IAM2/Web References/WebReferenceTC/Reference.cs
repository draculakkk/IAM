//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18449
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18449 版自动生成。
// 
#pragma warning disable 1591

namespace IAM.WebReferenceTC {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MyWESServiceSoap11Binding", Namespace="http://CTree")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Exception))]
    public partial class MyWESService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback mainaOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadOperationCompleted;
        
        private System.Threading.SendOrPostCallback getchildOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getroleOperationCompleted;
        
        private System.Threading.SendOrPostCallback showinfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MyWESService() {
            this.Url = global::IAM.Properties.Settings.Default.IAM_WebReferenceTC_MyWESService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event mainaCompletedEventHandler mainaCompleted;
        
        /// <remarks/>
        public event loadCompletedEventHandler loadCompleted;
        
        /// <remarks/>
        public event getchildOrganizationCompletedEventHandler getchildOrganizationCompleted;
        
        /// <remarks/>
        public event getroleCompletedEventHandler getroleCompleted;
        
        /// <remarks/>
        public event showinfoCompletedEventHandler showinfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:maina", RequestNamespace="http://CTree", ResponseNamespace="http://CTree", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Tree maina([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filepath) {
            object[] results = this.Invoke("maina", new object[] {
                        filepath});
            return ((Tree)(results[0]));
        }
        
        /// <remarks/>
        public void mainaAsync(string filepath) {
            this.mainaAsync(filepath, null);
        }
        
        /// <remarks/>
        public void mainaAsync(string filepath, object userState) {
            if ((this.mainaOperationCompleted == null)) {
                this.mainaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmainaOperationCompleted);
            }
            this.InvokeAsync("maina", new object[] {
                        filepath}, this.mainaOperationCompleted, userState);
        }
        
        private void OnmainaOperationCompleted(object arg) {
            if ((this.mainaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mainaCompleted(this, new mainaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:load", RequestNamespace="http://CTree", ResponseNamespace="http://CTree", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public Tree load() {
            object[] results = this.Invoke("load", new object[0]);
            return ((Tree)(results[0]));
        }
        
        /// <remarks/>
        public void loadAsync() {
            this.loadAsync(null);
        }
        
        /// <remarks/>
        public void loadAsync(object userState) {
            if ((this.loadOperationCompleted == null)) {
                this.loadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadOperationCompleted);
            }
            this.InvokeAsync("load", new object[0], this.loadOperationCompleted, userState);
        }
        
        private void OnloadOperationCompleted(object arg) {
            if ((this.loadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadCompleted(this, new loadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getchildOrganization", RequestNamespace="http://CTree", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getchildOrganization([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Tree a) {
            this.Invoke("getchildOrganization", new object[] {
                        a});
        }
        
        /// <remarks/>
        public void getchildOrganizationAsync(Tree a) {
            this.getchildOrganizationAsync(a, null);
        }
        
        /// <remarks/>
        public void getchildOrganizationAsync(Tree a, object userState) {
            if ((this.getchildOrganizationOperationCompleted == null)) {
                this.getchildOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetchildOrganizationOperationCompleted);
            }
            this.InvokeAsync("getchildOrganization", new object[] {
                        a}, this.getchildOrganizationOperationCompleted, userState);
        }
        
        private void OngetchildOrganizationOperationCompleted(object arg) {
            if ((this.getchildOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getchildOrganizationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getrole", RequestNamespace="http://CTree", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getrole([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Tree aa) {
            this.Invoke("getrole", new object[] {
                        aa});
        }
        
        /// <remarks/>
        public void getroleAsync(Tree aa) {
            this.getroleAsync(aa, null);
        }
        
        /// <remarks/>
        public void getroleAsync(Tree aa, object userState) {
            if ((this.getroleOperationCompleted == null)) {
                this.getroleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetroleOperationCompleted);
            }
            this.InvokeAsync("getrole", new object[] {
                        aa}, this.getroleOperationCompleted, userState);
        }
        
        private void OngetroleOperationCompleted(object arg) {
            if ((this.getroleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getroleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:showinfo", RequestNamespace="http://CTree", ResponseNamespace="http://CTree", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public object showinfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filepathuserinfo) {
            object[] results = this.Invoke("showinfo", new object[] {
                        filepathuserinfo});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void showinfoAsync(string filepathuserinfo) {
            this.showinfoAsync(filepathuserinfo, null);
        }
        
        /// <remarks/>
        public void showinfoAsync(string filepathuserinfo, object userState) {
            if ((this.showinfoOperationCompleted == null)) {
                this.showinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowinfoOperationCompleted);
            }
            this.InvokeAsync("showinfo", new object[] {
                        filepathuserinfo}, this.showinfoOperationCompleted, userState);
        }
        
        private void OnshowinfoOperationCompleted(object arg) {
            if ((this.showinfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showinfoCompleted(this, new showinfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTree/xsd")]
    public partial class Tree {
        
        private string typeField;
        
        private object childsField;
        
        private string titleField;
        
        private Tree parentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object childs {
            get {
                return this.childsField;
            }
            set {
                this.childsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Tree parent {
            get {
                return this.parentField;
            }
            set {
                this.parentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTree")]
    public partial class Exception {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void mainaCompletedEventHandler(object sender, mainaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mainaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mainaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tree Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tree)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void loadCompletedEventHandler(object sender, loadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tree Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tree)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getchildOrganizationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getroleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void showinfoCompletedEventHandler(object sender, showinfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showinfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showinfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591